[{"/Users/samhiga/Bootcamp/bucket-list/src/index.js":"1","/Users/samhiga/Bootcamp/bucket-list/src/App.js":"2","/Users/samhiga/Bootcamp/bucket-list/src/components/BucketList.js":"3","/Users/samhiga/Bootcamp/bucket-list/src/components/Bucket.js":"4","/Users/samhiga/Bootcamp/bucket-list/src/components/BucketForm.js":"5"},{"size":197,"mtime":1685120453639,"results":"6","hashOfConfig":"7"},{"size":192,"mtime":1685120453638,"results":"8","hashOfConfig":"7"},{"size":2319,"mtime":1685137008542,"results":"9","hashOfConfig":"7"},{"size":1917,"mtime":1685136412690,"results":"10","hashOfConfig":"7"},{"size":2825,"mtime":1685135403638,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"b17vsn",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"15"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/samhiga/Bootcamp/bucket-list/src/index.js",[],[],[],"/Users/samhiga/Bootcamp/bucket-list/src/App.js",[],[],"/Users/samhiga/Bootcamp/bucket-list/src/components/BucketList.js",["29"],[],"/Users/samhiga/Bootcamp/bucket-list/src/components/Bucket.js",["30"],[],"import React, { useState } from 'react';\nimport BucketForm from './BucketForm';\n\nfunction Bucket(props) {\n  const [edit, setEdit] = useState({\n    id: null,\n    value: '',\n    eagerness: '',\n  });\n\n  console.log(props.bucket);\n\n  const submitUpdate = (value) => {\n\n    // TODO: Write logic to update the `edit` value in state after a user updates an entry in the list\n    // Update the bucket list with the new item\n    setEdit({\n      id: value.id,\n      value: value.value,\n      eagerness: value.eagerness, \n    })\n    \n  // Update the `edit` value in state\n\n    // TODO: Set the key:value pairs in the `edit` object back to empty strings\n    setEdit({\n      id: null,\n      value: '',\n      eagerness: '',\n    });\n  };\n\n  // If the user is attempting to edit an item, render the bucket form with the edit variable passed as a prop\n  if (edit.id) {\n    return <BucketForm edit={edit} onSubmit={submitUpdate} />;\n  }\n\n  return props.bucket.map((item, index) => (\n    // TODO: Add a className of `bucket row complete ${item.eagerness}` for completed items, and `bucket-row ${item.eagerness}` for non-completed items\n    // TODO: Add a key attribute set to the value of the index position\n    // Hint: use a ternary operator\n    <div className={`${item.complete }`} key={index}>\n\n      // TODO: Add an onClick event that invokes the `completeBucketItem` method passing the item id as a argument\n      <div key={index} onClick={() => handleClick(item)}>\n          {/* TODO: Add the item text here */}\n          {item.text}\n      </div>\n      <div className=\"icons\">\n        // TODO: Add an onClick event update the `edit` object with the `id`, `value`, and `eagerness` properties\n        <p onClick={}> ‚úèÔ∏è</p>\n        {/* TODO: Add an onClick event that will invoke the removeBucketItem method passing in the `item.id` */}\n        <p onClick={}> üóëÔ∏è</p>\n      </div>\n    </div>\n  ));\n}\n\nexport default Bucket;\n","/Users/samhiga/Bootcamp/bucket-list/src/components/BucketForm.js",[],[],{"ruleId":null,"fatal":true,"severity":2,"message":"31","line":40,"column":8,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"32","line":51,"column":19,"nodeType":null},"Parsing error: Identifier 'removeBucket' has already been declared. (40:8)","Parsing error: JSX attributes must only be assigned a non-empty expression. (51:19)"]